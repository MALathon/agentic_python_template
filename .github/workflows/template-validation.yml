name: Template Validation

# This workflow validates the agentic template functionality
# It runs on the template repository, not on user projects

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly to catch any Claude model changes
    - cron: '0 0 * * 0'

jobs:
  validate-template:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
    
    - name: Validate shell scripts
      run: |
        # Check all scripts have proper shebang and are executable
        for script in scripts/*.sh; do
          echo "Checking $script"
          head -1 "$script" | grep -q '^#!/bin/bash' || exit 1
          test -x "$script" || exit 1
          bash -n "$script" || exit 1
        done
    
    - name: Run template structure tests
      run: |
        pytest tests/template/test_agents.py -v
        pytest tests/template/test_orchestration.py -v
    
    - name: Validate prompt consistency
      run: |
        python tests/template/validate_prompts.py
    
    - name: Check command files
      run: |
        # Ensure all command files are valid markdown
        for cmd in .claude/commands/*.md; do
          echo "Validating $cmd"
          # Basic markdown validation
          grep -q '^#' "$cmd" || exit 1
        done
    
    - name: Test orchestration help
      run: |
        ./scripts/orchestrate.sh | grep -q "Usage:" || exit 1
    
    - name: Test meeting help  
      run: |
        ./scripts/meeting.sh | grep -q "Usage:" || exit 1
    
    # Only run agent tests if we have Claude CLI available
    - name: Run agent interaction tests
      if: env.CLAUDE_API_KEY != ''
      env:
        RUN_AGENT_TESTS: '1'
      run: |
        pytest tests/template/test_agents.py::TestAgentFunctionality::test_orchestration_analyze -v
    
    - name: Generate test report
      if: always()
      run: |
        echo "## Template Validation Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- Shell Scripts: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- Template Structure: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- Agent Commands: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- Orchestration: ✅" >> $GITHUB_STEP_SUMMARY